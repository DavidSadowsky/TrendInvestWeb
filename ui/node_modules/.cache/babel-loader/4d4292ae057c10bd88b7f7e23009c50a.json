{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Report.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { LineChart, XAxis, CartesianGrid, Line, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n}));\n\nconst Report = ({\n  data,\n  onClear\n}) => {\n  _s();\n\n  const classes = useStyles();\n  console.log(data.misc.Reddit_mentions_last_week);\n  const reddit_mentions = [data.misc.Reddit_mentions_four_weeks_ago, data.misc.Reddit_mentions_three_weeks_ago, data.misc.Reddit_mentions_two_weeks_ago, data.misc.Reddit_mentions_last_week, data.misc.Reddit_mentions_this_week];\n  console.log(reddit_mentions);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.misc.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"caption\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\"I've predicted that \", data.misc.name, \" will be\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.prediction == 'Bearish' ? 'red' : 'green'\n          },\n          children: ' ' + data.prediction + ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), \"with a confidence level of\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.confidence > .80 ? 'green' : data.confidence < .65 ? 'red' : 'yellow'\n          },\n          children: [' ' + (data.confidence * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Here's the data I used\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 400,\n      height: 400,\n      data: reddit_mentions,\n      margin: {\n        top: 5,\n        right: 20,\n        left: 10,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Report, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Report.js"],"names":["React","makeStyles","Box","LineChart","XAxis","CartesianGrid","Line","Tooltip","useStyles","theme","body","display","flex","justifyContent","alignItems","flexDirection","Report","data","onClear","classes","console","log","misc","Reddit_mentions_last_week","reddit_mentions","Reddit_mentions_four_weeks_ago","Reddit_mentions_three_weeks_ago","Reddit_mentions_two_weeks_ago","Reddit_mentions_this_week","name","color","prediction","confidence","toFixed","top","right","left","bottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,aAA3B,EAA0CC,IAA1C,EAAgDC,OAAhD,QAA+D,UAA/D;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,IAAI,EAAE,CAFJ;AAGFC,IAAAA,cAAc,EAAE,QAHd;AAIFC,IAAAA,UAAU,EAAE,QAJV;AAKFC,IAAAA,aAAa,EAAE;AALb;AAD+B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAAA;;AAChC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,IAAL,CAAUC,yBAAtB;AACA,QAAMC,eAAe,GAAG,CACpBP,IAAI,CAACK,IAAL,CAAUG,8BADU,EAEpBR,IAAI,CAACK,IAAL,CAAUI,+BAFU,EAGpBT,IAAI,CAACK,IAAL,CAAUK,6BAHU,EAIpBV,IAAI,CAACK,IAAL,CAAUC,yBAJU,EAKpBN,IAAI,CAACK,IAAL,CAAUM,yBALU,CAAxB;AAOAR,EAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ;AACA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACT,IAAxB;AAAA,4BACI;AAAA,gBAAKO,IAAI,CAACK,IAAL,CAAUO;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAA,2CACyBZ,IAAI,CAACK,IAAL,CAAUO,IADnC,2BAEQ;AACI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEb,IAAI,CAACc,UAAL,IAAmB,SAAnB,GAA+B,KAA/B,GAAuC;AAAhD,WADX;AAAA,oBAES,MAAMd,IAAI,CAACc,UAAX,GAAwB;AAFjC;AAAA;AAAA;AAAA;AAAA,gBAFR,6CAOQ;AACI,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAEb,IAAI,CAACe,UAAL,GAAkB,GAAlB,GAAwB,OAAxB,GAAkCf,IAAI,CAACe,UAAL,GAAkB,GAAlB,GAAwB,KAAxB,GAAgC;AAA3E,WADX;AAAA,qBAEa,MAAM,CAACf,IAAI,CAACe,UAAL,GAAgB,GAAjB,EAAsBC,OAAtB,CAA8B,CAA9B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI,QAAC,SAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,IAAI,EAAET,eAHR;AAIE,MAAA,MAAM,EAAE;AAAEU,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAJV;AAAA,8BAMI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAxCD;;GAAMrB,M;UACcR,S;;;KADdQ,M;AA0CN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport { LineChart, XAxis, CartesianGrid, Line, Tooltip } from 'recharts'\n\nconst useStyles = makeStyles((theme) => ({\n    body: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    }\n}))\n\nconst Report = ({data, onClear}) => {\n    const classes = useStyles()\n    console.log(data.misc.Reddit_mentions_last_week)\n    const reddit_mentions = [\n        data.misc.Reddit_mentions_four_weeks_ago, \n        data.misc.Reddit_mentions_three_weeks_ago,\n        data.misc.Reddit_mentions_two_weeks_ago,\n        data.misc.Reddit_mentions_last_week,\n        data.misc.Reddit_mentions_this_week\n    ]\n    console.log(reddit_mentions)\n    return (\n        <Box className={classes.body}>\n            <h2>{data.misc.name}</h2>\n            <caption>\n                <center>\n                    I've predicted that {data.misc.name} will be\n                        <span \n                            style={{ color: data.prediction == 'Bearish' ? 'red' : 'green'}}>\n                                {' ' + data.prediction + ' '}\n                        </span> \n                    with a confidence level of \n                        <span \n                            style={{ color: data.confidence > .80 ? 'green' : data.confidence < .65 ? 'red' : 'yellow'}}>\n                                    {' ' + (data.confidence*100).toFixed(2)}%\n                        </span>\n                </center>\n            </caption>\n            <h4>Here's the data I used</h4>\n            <LineChart\n              width={400}\n              height={400}\n              data={reddit_mentions}\n              margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n                >\n                <XAxis />\n                <CartesianGrid stroke=\"#f5f5f5\" />\n            </LineChart>\n        </Box>\n    )\n}\n\nexport default Report"]},"metadata":{},"sourceType":"module"}