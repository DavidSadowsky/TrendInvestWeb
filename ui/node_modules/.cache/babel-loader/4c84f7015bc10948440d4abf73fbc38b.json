{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Report.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { LineChart, XAxis, CartesianGrid, Line, Tooltip, YAxis, Legend } from 'recharts';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  graph_section_title: {\n    paddingTop: 30\n  },\n  graph_row: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  graph: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  reddit_mentions_graph: {\n    paddingTop: 20\n  },\n  reddit_sentiment_graph: {\n    paddingTop: 50\n  }\n}));\nconst BootstrapButton = withStyles({\n  root: {\n    color: 'white',\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 14,\n    padding: '6px 200px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#1652F0',\n    borderColor: '#0063cc',\n    fontFamily: 'Red Hat Display',\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf'\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n    }\n  }\n})(Button);\n\nconst Report = ({\n  data,\n  onClear\n}) => {\n  _s();\n\n  const classes = useStyles();\n  console.log(data.misc.Reddit_mentions_last_week);\n  const reddit_mentions = [{\n    \"name\": \"4\",\n    \"# of reddit mentions\": data.misc.Reddit_mentions_four_weeks_ago\n  }, {\n    \"name\": \"3\",\n    \"# of reddit mentions\": data.misc.Reddit_mentions_three_weeks_ago\n  }, {\n    \"name\": \"2\",\n    \"# of reddit mentions\": data.misc.Reddit_mentions_two_weeks_ago\n  }, {\n    \"name\": \"1\",\n    \"# of reddit mentions\": data.misc.Reddit_mentions_last_week\n  }, {\n    \"name\": \"0\",\n    \"# of reddit mentions\": data.misc.Reddit_mentions_this_week\n  }];\n  const reddit_sentiment = [{\n    \"name\": \"4\",\n    \"Average sentiment\": data.misc.Reddit_sentiment_four_weeks_ago\n  }, {\n    \"name\": \"3\",\n    \"Average sentiment\": data.misc.Reddit_sentiment_three_weeks_ago\n  }, {\n    \"name\": \"2\",\n    \"Average sentiment\": data.misc.Reddit_sentiment_two_weeks_ago\n  }, {\n    \"name\": \"1\",\n    \"Average sentiment\": data.misc.Reddit_sentiment_last_week\n  }, {\n    \"name\": \"0\",\n    \"Average sentiment\": data.misc.Reddit_sentiment_this_week\n  }];\n  const twitter_mentions = [{\n    \"name\": \"4\",\n    \"# of twitter mentions\": data.misc.Twitter_mentions_four_weeks_ago\n  }, {\n    \"name\": \"3\",\n    \"# of twitter mentions\": data.misc.Twitter_mentions_three_weeks_ago\n  }, {\n    \"name\": \"2\",\n    \"# of twitter mentions\": data.misc.Twitter_mentions_two_weeks_ago\n  }, {\n    \"name\": \"1\",\n    \"# of twitter mentions\": data.misc.Twitter_mentions_last_week\n  }, {\n    \"name\": \"0\",\n    \"# of twitter mentions\": data.misc.Twitter_mentions_this_week\n  }];\n  const twitter_sentiment = [{\n    \"name\": \"4\",\n    \"Average sentiment\": data.misc.Twitter_sentiment_four_weeks_ago\n  }, {\n    \"name\": \"3\",\n    \"Average sentiment\": data.misc.Twitter_sentiment_three_weeks_ago\n  }, {\n    \"name\": \"2\",\n    \"Average sentiment\": data.misc.Twitter_sentiment_two_weeks_ago\n  }, {\n    \"name\": \"1\",\n    \"Average sentiment\": data.misc.Twitter_sentiment_last_week\n  }, {\n    \"name\": \"0\",\n    \"Average sentiment\": data.misc.Twitter_sentiment_this_week\n  }];\n  const price = [{\n    \"name\": \"4\",\n    \"price\": data.misc.Price_four_weeks_ago\n  }, {\n    \"name\": \"3\",\n    \"price\": data.misc.Price_three_weeks_ago\n  }, {\n    \"name\": \"2\",\n    \"price\": data.misc.Price_two_weeks_ago\n  }, {\n    \"name\": \"1\",\n    \"price\": data.misc.Price_last_week\n  }, {\n    \"name\": \"0\",\n    \"price\": data.misc.Price_this_week\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.misc.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"caption\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\"I've predicted that \", data.misc.name, \" is\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.prediction == 'Bearish' ? 'red' : 'green'\n          },\n          children: ' ' + data.prediction + ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), \"with a confidence level of\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.confidence > .80 ? 'green' : data.confidence < .65 ? 'red' : 'yellow'\n          },\n          children: [' ' + (data.confidence * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: classes.graph_section_title,\n      children: \"Here's some of the data I used\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.graph_row,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.reddit_mentions_graph,\n          children: \"Reddit Mentions (Weekly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: reddit_mentions,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"# of reddit mentions\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Weeks ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.reddit_mentions_graph,\n          children: \"Reddit Sentiment (Weekly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: reddit_sentiment,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Average sentiment\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Weeks ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.graph_row,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.reddit_mentions_graph,\n          children: \"Twitter Mentions (Weekly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: twitter_mentions,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"# of twitter mentions\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Weeks ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.reddit_mentions_graph,\n          children: \"Twitter Sentiment (Weekly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: twitter_sentiment,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Average sentiment\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Weeks ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.graph_row,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.reddit_mentions_graph,\n          children: \"Price (Weekly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: price,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Weeks ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.submit,\n      pt: 6,\n      children: /*#__PURE__*/_jsxDEV(BootstrapButton, {\n        onClick: () => onClear(),\n        children: \"Make another prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Report, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Report.js"],"names":["React","makeStyles","withStyles","Box","LineChart","XAxis","CartesianGrid","Line","Tooltip","YAxis","Legend","Button","useStyles","theme","body","display","flex","justifyContent","alignItems","flexDirection","graph_section_title","paddingTop","graph_row","graph","reddit_mentions_graph","reddit_sentiment_graph","BootstrapButton","root","color","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","Report","data","onClear","classes","console","log","misc","Reddit_mentions_last_week","reddit_mentions","Reddit_mentions_four_weeks_ago","Reddit_mentions_three_weeks_ago","Reddit_mentions_two_weeks_ago","Reddit_mentions_this_week","reddit_sentiment","Reddit_sentiment_four_weeks_ago","Reddit_sentiment_three_weeks_ago","Reddit_sentiment_two_weeks_ago","Reddit_sentiment_last_week","Reddit_sentiment_this_week","twitter_mentions","Twitter_mentions_four_weeks_ago","Twitter_mentions_three_weeks_ago","Twitter_mentions_two_weeks_ago","Twitter_mentions_last_week","Twitter_mentions_this_week","twitter_sentiment","Twitter_sentiment_four_weeks_ago","Twitter_sentiment_three_weeks_ago","Twitter_sentiment_two_weeks_ago","Twitter_sentiment_last_week","Twitter_sentiment_this_week","price","Price_four_weeks_ago","Price_three_weeks_ago","Price_two_weeks_ago","Price_last_week","Price_this_week","name","prediction","confidence","toFixed","top","right","left","bottom","submit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport { LineChart, XAxis, CartesianGrid, Line, Tooltip, YAxis, Legend } from 'recharts'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    body: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    graph_section_title: {\n        paddingTop: 30\n    },\n    graph_row: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center', \n    },\n    graph: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    reddit_mentions_graph: {\n        paddingTop: 20\n    },\n    reddit_sentiment_graph: {\n        paddingTop: 50\n    }\n}))\n\nconst BootstrapButton = withStyles({\n    root: {\n      color: 'white',\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 14,\n      padding: '6px 200px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#1652F0',\n      borderColor: '#0063cc',\n      fontFamily: 'Red Hat Display',\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n\nconst Report = ({data, onClear}) => {\n    const classes = useStyles()\n    console.log(data.misc.Reddit_mentions_last_week)\n    const reddit_mentions = [\n        { \n            \"name\": \"4\",\n            \"# of reddit mentions\": data.misc.Reddit_mentions_four_weeks_ago, \n        },\n        { \n            \"name\": \"3\",\n            \"# of reddit mentions\": data.misc.Reddit_mentions_three_weeks_ago, \n        },\n        { \n            \"name\": \"2\",\n            \"# of reddit mentions\": data.misc.Reddit_mentions_two_weeks_ago, \n        },\n        { \n            \"name\": \"1\",\n            \"# of reddit mentions\": data.misc.Reddit_mentions_last_week, \n        },\n        { \n            \"name\": \"0\",\n            \"# of reddit mentions\": data.misc.Reddit_mentions_this_week, \n        },\n    ]\n\n    const reddit_sentiment = [\n        { \n            \"name\": \"4\",\n            \"Average sentiment\": data.misc.Reddit_sentiment_four_weeks_ago, \n        },\n        { \n            \"name\": \"3\",\n            \"Average sentiment\": data.misc.Reddit_sentiment_three_weeks_ago, \n        },\n        { \n            \"name\": \"2\",\n            \"Average sentiment\": data.misc.Reddit_sentiment_two_weeks_ago, \n        },\n        { \n            \"name\": \"1\",\n            \"Average sentiment\": data.misc.Reddit_sentiment_last_week, \n        },\n        { \n            \"name\": \"0\",\n            \"Average sentiment\": data.misc.Reddit_sentiment_this_week, \n        },\n    ]\n\n    const twitter_mentions = [\n        { \n            \"name\": \"4\",\n            \"# of twitter mentions\": data.misc.Twitter_mentions_four_weeks_ago, \n        },\n        { \n            \"name\": \"3\",\n            \"# of twitter mentions\": data.misc.Twitter_mentions_three_weeks_ago, \n        },\n        { \n            \"name\": \"2\",\n            \"# of twitter mentions\": data.misc.Twitter_mentions_two_weeks_ago, \n        },\n        { \n            \"name\": \"1\",\n            \"# of twitter mentions\": data.misc.Twitter_mentions_last_week, \n        },\n        { \n            \"name\": \"0\",\n            \"# of twitter mentions\": data.misc.Twitter_mentions_this_week, \n        },\n    ]\n\n    const twitter_sentiment = [\n        { \n            \"name\": \"4\",\n            \"Average sentiment\": data.misc.Twitter_sentiment_four_weeks_ago, \n        },\n        { \n            \"name\": \"3\",\n            \"Average sentiment\": data.misc.Twitter_sentiment_three_weeks_ago, \n        },\n        { \n            \"name\": \"2\",\n            \"Average sentiment\": data.misc.Twitter_sentiment_two_weeks_ago, \n        },\n        { \n            \"name\": \"1\",\n            \"Average sentiment\": data.misc.Twitter_sentiment_last_week, \n        },\n        { \n            \"name\": \"0\",\n            \"Average sentiment\": data.misc.Twitter_sentiment_this_week, \n        },\n    ]\n\n    const price = [\n        { \n            \"name\": \"4\",\n            \"price\": data.misc.Price_four_weeks_ago, \n        },\n        { \n            \"name\": \"3\",\n            \"price\": data.misc.Price_three_weeks_ago, \n        },\n        { \n            \"name\": \"2\",\n            \"price\": data.misc.Price_two_weeks_ago, \n        },\n        { \n            \"name\": \"1\",\n            \"price\": data.misc.Price_last_week, \n        },\n        { \n            \"name\": \"0\",\n            \"price\": data.misc.Price_this_week, \n        },\n    ]\n    return (\n        <Box className={classes.body}>\n            <h2>{data.misc.name}</h2>\n            <caption>\n                <center>\n                    I've predicted that {data.misc.name} is\n                        <span \n                            style={{ color: data.prediction == 'Bearish' ? 'red' : 'green'}}>\n                                {' ' + data.prediction + ' '}\n                        </span> \n                    with a confidence level of \n                        <span \n                            style={{ color: data.confidence > .80 ? 'green' : data.confidence < .65 ? 'red' : 'yellow'}}>\n                                    {' ' + (data.confidence*100).toFixed(2)}%\n                        </span>\n                </center>\n            </caption>\n            <h4 className={classes.graph_section_title}>Here's some of the data I used</h4>\n            <div className={classes.graph_row}>\n                <div className={classes.graph}>\n                    <h6 className={classes.reddit_mentions_graph}>Reddit Mentions (Weekly)</h6>\n                        <LineChart\n                         width={400}\n                         height={400}\n                         data={reddit_mentions}\n                         margin={{ top: 5, right: 20, left: 15, bottom: 5 }}\n                        >\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={['auto', 'auto']}/>\n                            <Tooltip />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Line type=\"monotone\" dataKey=\"# of reddit mentions\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    <h6>Weeks ago</h6>\n                </div>\n                <div className={classes.graph}>\n                    <h6 className={classes.reddit_mentions_graph}>Reddit Sentiment (Weekly)</h6>\n                        <LineChart\n                         width={400}\n                         height={400}\n                         data={reddit_sentiment}\n                         margin={{ top: 5, right: 20, left: 15, bottom: 5 }}\n                        >\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={['auto', 'auto']}/>\n                            <Tooltip />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Line type=\"monotone\" dataKey=\"Average sentiment\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    <h6>Weeks ago</h6>\n                </div>\n            </div>\n            <div className={classes.graph_row}>\n                <div className={classes.graph}>\n                    <h6 className={classes.reddit_mentions_graph}>Twitter Mentions (Weekly)</h6>\n                        <LineChart\n                         width={400}\n                         height={400}\n                         data={twitter_mentions}\n                         margin={{ top: 5, right: 20, left: 15, bottom: 5 }}\n                        >\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={['auto', 'auto']}/>\n                            <Tooltip />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Line type=\"monotone\" dataKey=\"# of twitter mentions\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    <h6>Weeks ago</h6>\n                </div>\n                <div className={classes.graph}>\n                    <h6 className={classes.reddit_mentions_graph}>Twitter Sentiment (Weekly)</h6>\n                        <LineChart\n                         width={400}\n                         height={400}\n                         data={twitter_sentiment}\n                         margin={{ top: 5, right: 20, left: 15, bottom: 5 }}\n                        >\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={['auto', 'auto']}/>\n                            <Tooltip />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Line type=\"monotone\" dataKey=\"Average sentiment\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    <h6>Weeks ago</h6>\n                </div>\n            </div>\n            <div className={classes.graph_row}>\n                <div className={classes.graph}>\n                    <h6 className={classes.reddit_mentions_graph}>Price (Weekly)</h6>\n                        <LineChart\n                         width={400}\n                         height={400}\n                         data={price}\n                         margin={{ top: 5, right: 20, left: 15, bottom: 5 }}\n                        >\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={['auto', 'auto']}/>\n                            <Tooltip />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    <h6>Weeks ago</h6>\n                </div>\n            </div>\n            <Box className={classes.submit} pt={6}>\n                <BootstrapButton onClick={() => onClear()}>\n                    Make another prediction\n                </BootstrapButton>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Report"]},"metadata":{},"sourceType":"module"}