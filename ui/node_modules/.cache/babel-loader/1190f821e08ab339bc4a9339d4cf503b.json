{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Screens/landing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport InputForm from '../Components/InputForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    alignSelf: 'start'\n  },\n  body: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  card: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  title: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  animateWrapper: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\n\nconst Landing = ({\n  setData,\n  setIsLoading,\n  isLoading\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const myRef = document.querySelector('.scrollable-div');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.body,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(TypeWriterEffect, {\n      textStyle: {\n        fontFamily: 'Red Hat Display',\n        color: 'white',\n        textAlign: 'center'\n      },\n      startDelay: 100,\n      cursorColor: \"white\",\n      multiText: [\"Give me one second...\", \"this usually takes around 15-30 seconds...\", \"however, since I'm collecting realtime data,\", \"it'll take longer if multiple users want predictions.\", \"Reddit & Twitter have some pretty strict request limits.\", \"Hang tight. I'm still working.\"],\n      typeSpeed: 50,\n      hideCursorAfterText: false,\n      scrollArea: myRef,\n      className: classes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(TypeWriterEffect, {\n        textStyle: {\n          fontFamily: 'Red Hat Display',\n          color: 'white',\n          textAlign: 'center'\n        },\n        startDelay: 100,\n        cursorColor: \"white\",\n        text: \"Predict. Research. Invest.\",\n        typeSpeed: 100,\n        hideCursorAfterText: true,\n        scrollArea: myRef,\n        className: classes.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        pt: 10,\n        className: classes.card,\n        children: /*#__PURE__*/_jsxDEV(InputForm, {\n          className: classes.form,\n          setData: setData,\n          setIsLoading: setIsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Landing, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Screens/landing.js"],"names":["React","Box","Container","InputForm","makeStyles","TypeWriterEffect","useStyles","theme","logo","alignSelf","body","display","flex","justifyContent","alignItems","flexDirection","card","title","color","textAlign","animateWrapper","Landing","setData","setIsLoading","isLoading","classes","myRef","document","querySelector","fontFamily","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport InputForm from '../Components/InputForm'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TypeWriterEffect from 'react-typewriter-effect';\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n      alignSelf: 'start'\n    },\n    body: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    card: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    title: {\n      color: 'white',\n      textAlign: 'center'\n    },\n    animateWrapper: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  }))\n\nconst Landing = ({setData, setIsLoading, isLoading}) => {\n    const classes = useStyles()\n    const myRef = document.querySelector('.scrollable-div')\n    return (\n      <div className={classes.body}>\n        { isLoading ? <TypeWriterEffect\n                textStyle={{ fontFamily: 'Red Hat Display', color: 'white', textAlign: 'center' }}\n                startDelay={100}\n                cursorColor=\"white\"\n                multiText={[\"Give me one second...\",\n                \"this usually takes around 15-30 seconds...\",\n                \"however, since I'm collecting realtime data,\",\n                \"it'll take longer if multiple users want predictions.\",\n                \"Reddit & Twitter have some pretty strict request limits.\",\n                \"Hang tight. I'm still working.\"\n                ]}\n                typeSpeed={50}\n                hideCursorAfterText={false}\n                scrollArea={myRef}\n                className={classes.title}\n                /> :\n        <Container className={classes.body}>\n            <TypeWriterEffect\n                textStyle={{ fontFamily: 'Red Hat Display', color: 'white', textAlign: 'center' }}\n                startDelay={100}\n                cursorColor=\"white\"\n                text=\"Predict. Research. Invest.\"\n                typeSpeed={100}\n                hideCursorAfterText={true}\n                scrollArea={myRef}\n                className={classes.title}\n                />\n                <Box pt={10} className={classes.card}>\n                <InputForm className={classes.form} setData={setData} setIsLoading={setIsLoading} />\n                </Box>\n            </Container>\n        }\n        </div>\n    )\n}\n\nexport default Landing"]},"metadata":{},"sourceType":"module"}