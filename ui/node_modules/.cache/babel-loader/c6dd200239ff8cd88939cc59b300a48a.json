{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport InputForm from './Components/InputForm';\nimport logo from \"./assets/Trend Invest.svg\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { red } from '@material-ui/core/colors';\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport { AnimateOnChange } from 'react-animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  logo: {},\n  body: {\n    paddingLeft: theme.spacing(40),\n    paddingRight: theme.spacing(40)\n  },\n  card: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    color: 'white',\n    textAlign: 'center'\n  }\n}));\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    document.body.style.backgroundColor = '#1652F0';\n  }, []);\n  const [prediction, setPrediction] = useState(null);\n  const classes = useStyles();\n  const myRef = document.querySelector('.scrollable-div');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      width: \"200\",\n      height: \"200\",\n      className: classes.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(TypeWriterEffect, {\n        textStyle: {\n          fontFamily: 'Red Hat Display',\n          color: 'white',\n          textAlign: 'center'\n        },\n        startDelay: 100,\n        cursorColor: \"white\",\n        text: \"Predict. Research. Invest.\",\n        typeSpeed: 100,\n        hideCursorAfterText: true,\n        scrollArea: myRef,\n        className: classes.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimateOnChange, {\n        children: prediction != null ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: prediction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          pt: 10,\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(InputForm, {\n            className: classes.form,\n            onSubmit: setPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QKDlIZ/MyTC52IawRk+wHERbbH0=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/App.js"],"names":["React","useEffect","useState","Box","Container","InputForm","makeStyles","BrowserRouter","Router","Switch","Route","Link","red","TypeWriterEffect","AnimateOnChange","useStyles","theme","logo","body","paddingLeft","spacing","paddingRight","card","display","flex","justifyContent","alignItems","title","color","textAlign","App","document","style","backgroundColor","prediction","setPrediction","classes","myRef","querySelector","fontFamily","form"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport InputForm from './Components/InputForm'\nimport logo from './assets/Trend Invest.svg'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { red } from '@material-ui/core/colors';\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport { AnimateOnChange } from 'react-animation'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n\n  },\n  body: {\n    paddingLeft: theme.spacing(40),\n    paddingRight: theme.spacing(40)\n  },\n  card: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    color: 'white',\n    textAlign: 'center'\n  }\n}))\n\n\nfunction App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = '#1652F0'\n  }, [])\n\n  const [prediction, setPrediction] = useState(null)\n\n  const classes = useStyles()\n  const myRef = document.querySelector('.scrollable-div')\n\n  return (\n    <div>\n      <img src={logo} width='200' height='200' className={classes.logo}/>\n      <Container className={classes.body}>\n        <TypeWriterEffect\n              textStyle={{ fontFamily: 'Red Hat Display', color: 'white', textAlign: 'center' }}\n              startDelay={100}\n              cursorColor=\"white\"\n              text=\"Predict. Research. Invest.\"\n              typeSpeed={100}\n              hideCursorAfterText={true}\n              scrollArea={myRef}\n              className={classes.title}\n            />\n          <AnimateOnChange>\n          {prediction != null ? <p>{prediction}</p> :\n          <Box pt={10} className={classes.card}>\n            <InputForm className={classes.form} onSubmit={setPrediction}/>\n          </Box>\n          }\n          </AnimateOnChange>\n      </Container>\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}