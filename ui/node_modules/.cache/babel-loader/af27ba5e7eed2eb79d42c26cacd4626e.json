{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    marginLeft: theme.spacing(15)\n  },\n  body: {\n    backgroundColor: 'white',\n    padding: theme.spacing(5),\n    borderRadius: 5,\n    boxShadow: '0px 0px 10px 3px rgba(0, 0, 0, .3)',\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\nconst BootstrapButton = withStyles({\n  root: {\n    color: 'white',\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 14,\n    padding: '6px 200px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#1652F0',\n    borderColor: '#0063cc',\n    fontFamily: 'Red Hat Display',\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf'\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n    }\n  }\n})(Button);\n\nconst Results = ({\n  onClear,\n  prediction\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selection, setSelection] = useState('');\n  const myRef = document.querySelector('.scrollable-div');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TypeWriterEffect, {\n      textStyle: {\n        fontFamily: 'Red Hat Display',\n        color: 'white',\n        textAlign: 'center'\n      },\n      cursorColor: \"white\",\n      multiText: [\"Based on the data currently available,\", \"here's what I predict...\"],\n      typeSpeed: 25,\n      multiTextDelay: 150,\n      hideCursorAfterText: true,\n      scrollArea: myRef,\n      className: classes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.body,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Results, \"kiA8wjbABun6oDIZTWzvQNplLsA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/Results.js"],"names":["React","useState","makeStyles","withStyles","Button","TypeWriterEffect","useStyles","theme","logo","marginLeft","spacing","body","backgroundColor","padding","borderRadius","boxShadow","display","flex","flexDirection","justifyContent","alignItems","BootstrapButton","root","color","textTransform","fontSize","border","lineHeight","borderColor","fontFamily","Results","onClear","prediction","classes","selection","setSelection","myRef","document","querySelector","textAlign","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport TypeWriterEffect from 'react-typewriter-effect';\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n      marginLeft: theme.spacing(15)\n    },\n    body: {\n      backgroundColor: 'white',\n      padding: theme.spacing(5),\n      borderRadius: 5,\n      boxShadow: '0px 0px 10px 3px rgba(0, 0, 0, .3)',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }))\n\n  const BootstrapButton = withStyles({\n    root: {\n      color: 'white',\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 14,\n      padding: '6px 200px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#1652F0',\n      borderColor: '#0063cc',\n      fontFamily: 'Red Hat Display',\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n\nconst Results = ({onClear, prediction}) => {\n    const classes = useStyles()\n    const [selection, setSelection] = useState('')\n    const myRef = document.querySelector('.scrollable-div')\n\n    return (\n        <div>\n        <TypeWriterEffect\n                textStyle={{ fontFamily: 'Red Hat Display', color: 'white', textAlign: 'center' }}\n                cursorColor=\"white\"\n                multiText={[\"Based on the data currently available,\",\n                \"here's what I predict...\"]}\n                typeSpeed={25}\n                multiTextDelay={150}\n                hideCursorAfterText={true}\n                scrollArea={myRef}\n                className={classes.title}\n                />\n        <div className={classes.body}>\n            <p>{prediction}</p>\n        </div>\n        </div>\n    );\n}\n\nexport default Results"]},"metadata":{},"sourceType":"module"}